{"abi":[{"type":"function","name":"decodeBytesToUint","inputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"}],"bytecode":{"object":"0x610251610035600b8282823980515f1a60731461002957634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe7300000000000000000000000000000000000000003014608060405260043610610034575f3560e01c8063f7ba47a314610038575b5f80fd5b61004b61004636600461013b565b61005d565b60405190815260200160405180910390f35b5f6020825110156100f4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f44617461206d757374206265206174206c65617374203332206279746573206c60448201527f6f6e670000000000000000000000000000000000000000000000000000000000606482015260840160405180910390fd5b818060200190518101906101089190610204565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f6020828403121561014b575f80fd5b813567ffffffffffffffff80821115610162575f80fd5b818401915084601f830112610175575f80fd5b8135818111156101875761018761010e565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019083821181831017156101cd576101cd61010e565b816040528281528760208487010111156101e5575f80fd5b826020860160208301375f928101602001929092525095945050505050565b5f60208284031215610214575f80fd5b505191905056fea26469706673582212202a6373ab9d0ae878fd62bd0b7622670870763ea6dfa01715f2ad158bc934628664736f6c63430008180033","sourceMap":"57:2136:20:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;57:2136:20;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x7300000000000000000000000000000000000000003014608060405260043610610034575f3560e01c8063f7ba47a314610038575b5f80fd5b61004b61004636600461013b565b61005d565b60405190815260200160405180910390f35b5f6020825110156100f4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f44617461206d757374206265206174206c65617374203332206279746573206c60448201527f6f6e670000000000000000000000000000000000000000000000000000000000606482015260840160405180910390fd5b818060200190518101906101089190610204565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f6020828403121561014b575f80fd5b813567ffffffffffffffff80821115610162575f80fd5b818401915084601f830112610175575f80fd5b8135818111156101875761018761010e565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019083821181831017156101cd576101cd61010e565b816040528281528760208487010111156101e5575f80fd5b826020860160208301375f928101602001929092525095945050505050565b5f60208284031215610214575f80fd5b505191905056fea26469706673582212202a6373ab9d0ae878fd62bd0b7622670870763ea6dfa01715f2ad158bc934628664736f6c63430008180033","sourceMap":"57:2136:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;1960:231;;;;;;:::i;:::-;;:::i;:::-;;;1342:25:65;;;1330:2;1315:18;1960:231:20;;;;;;;;2027:7;2069:2;2054:4;:11;:17;;2046:65;;;;;;;1580:2:65;2046:65:20;;;1562:21:65;1619:2;1599:18;;;1592:30;1658:34;1638:18;;;1631:62;1729:5;1709:18;;;1702:33;1752:19;;2046:65:20;;;;;;;;2139:4;2128:27;;;;;;;;;;;;:::i;:::-;2121:34;1960:231;-1:-1:-1;;1960:231:20:o;14:184:65:-;66:77;63:1;56:88;163:4;160:1;153:15;187:4;184:1;177:15;203:980;271:6;324:2;312:9;303:7;299:23;295:32;292:52;;;340:1;337;330:12;292:52;380:9;367:23;409:18;450:2;442:6;439:14;436:34;;;466:1;463;456:12;436:34;504:6;493:9;489:22;479:32;;549:7;542:4;538:2;534:13;530:27;520:55;;571:1;568;561:12;520:55;607:2;594:16;629:2;625;622:10;619:36;;;635:18;;:::i;:::-;769:2;763:9;831:4;823:13;;674:66;819:22;;;843:2;815:31;811:40;799:53;;;867:18;;;887:22;;;864:46;861:72;;;913:18;;:::i;:::-;953:10;949:2;942:22;988:2;980:6;973:18;1028:7;1023:2;1018;1014;1010:11;1006:20;1003:33;1000:53;;;1049:1;1046;1039:12;1000:53;1105:2;1100;1096;1092:11;1087:2;1079:6;1075:15;1062:46;1150:1;1128:15;;;1145:2;1124:24;1117:35;;;;-1:-1:-1;1132:6:65;203:980;-1:-1:-1;;;;;203:980:65:o;1782:184::-;1852:6;1905:2;1893:9;1884:7;1880:23;1876:32;1873:52;;;1921:1;1918;1911:12;1873:52;-1:-1:-1;1944:16:65;;1782:184;-1:-1:-1;1782:184:65:o","linkReferences":{}},"methodIdentifiers":{"decodeBytesToUint(bytes)":"f7ba47a3"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"decodeBytesToUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"decodeBytesToUint(bytes)\":{\"details\":\"Decodes a bytes array back to a uint256.\",\"params\":{\"data\":\"The bytes array to decode.\"},\"returns\":{\"_0\":\"uint256 The decoded uint256 value.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"decodeBytesToUint(bytes)\":{\"notice\":\"Reverts if the length of the bytes array is less than 32 bytes.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/blocklock-solidity/src/libraries/BytesLib.sol\":\"BytesLib\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@blocklock-solidity/src/=lib/blocklock-solidity/src/\",\":@ds-test/=lib/forge-std/lib/ds-test/src/\",\":@forge-std/=lib/forge-std/src/\",\":@openzeppelin/contracts-upgradeable/=lib/blocklock-solidity/lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":blocklock-solidity/=lib/blocklock-solidity/\",\":config/=config/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts-upgradeable/=lib/blocklock-solidity/lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/blocklock-solidity/src/libraries/BytesLib.sol\":{\"keccak256\":\"0x7a2f7bbb3799a5a2f025bcec0b7308694bcbc6bc391416dab6d5a7cb45cd3098\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c7b57c781ed104217da2f8c6aaaaf0e40160dc83d101711b4234450f81e0bea0\",\"dweb:/ipfs/QmUmEm9Wr1uRn6k1JDhr46GkqfwDiYvhZVwcfxCdj4cnyf\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.24+commit.e11b9ed9"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"pure","type":"function","name":"decodeBytesToUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]}],"devdoc":{"kind":"dev","methods":{"decodeBytesToUint(bytes)":{"details":"Decodes a bytes array back to a uint256.","params":{"data":"The bytes array to decode."},"returns":{"_0":"uint256 The decoded uint256 value."}}},"version":1},"userdoc":{"kind":"user","methods":{"decodeBytesToUint(bytes)":{"notice":"Reverts if the length of the bytes array is less than 32 bytes."}},"version":1}},"settings":{"remappings":["@blocklock-solidity/src/=lib/blocklock-solidity/src/","@ds-test/=lib/forge-std/lib/ds-test/src/","@forge-std/=lib/forge-std/src/","@openzeppelin/contracts-upgradeable/=lib/blocklock-solidity/lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","blocklock-solidity/=lib/blocklock-solidity/","config/=config/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","openzeppelin-contracts-upgradeable/=lib/blocklock-solidity/lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/"],"optimizer":{"enabled":true,"runs":20000},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/blocklock-solidity/src/libraries/BytesLib.sol":"BytesLib"},"evmVersion":"cancun","libraries":{}},"sources":{"lib/blocklock-solidity/src/libraries/BytesLib.sol":{"keccak256":"0x7a2f7bbb3799a5a2f025bcec0b7308694bcbc6bc391416dab6d5a7cb45cd3098","urls":["bzz-raw://c7b57c781ed104217da2f8c6aaaaf0e40160dc83d101711b4234450f81e0bea0","dweb:/ipfs/QmUmEm9Wr1uRn6k1JDhr46GkqfwDiYvhZVwcfxCdj4cnyf"],"license":"MIT"}},"version":1},"id":20}