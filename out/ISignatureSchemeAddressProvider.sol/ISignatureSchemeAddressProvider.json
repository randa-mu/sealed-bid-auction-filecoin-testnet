{"abi":[{"type":"function","name":"getSignatureSchemeAddress","inputs":[{"name":"schemeID","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"isSupportedScheme","inputs":[{"name":"schemeID","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"updateSignatureScheme","inputs":[{"name":"schemeID","type":"string","internalType":"string"},{"name":"schemeAddress","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"getSignatureSchemeAddress(string)":"5bb09cf8","isSupportedScheme(string)":"2fc9fa33","updateSignatureScheme(string,address)":"bab867da"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"schemeID\",\"type\":\"string\"}],\"name\":\"getSignatureSchemeAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"schemeID\",\"type\":\"string\"}],\"name\":\"isSupportedScheme\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"schemeID\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"schemeAddress\",\"type\":\"address\"}],\"name\":\"updateSignatureScheme\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getSignatureSchemeAddress(string)\":{\"details\":\"Looks up the address of the signature scheme contract identified by `schemeID`.\",\"params\":{\"schemeID\":\"The identifier of the signature scheme to look up.\"},\"returns\":{\"_0\":\"The contract address associated with the specified signature scheme.\"}},\"isSupportedScheme(string)\":{\"details\":\"Determines whether the signature scheme identified by `schemeID` is currently supported.\",\"params\":{\"schemeID\":\"The identifier of the signature scheme to check.\"},\"returns\":{\"_0\":\"True if the signature scheme is supported, otherwise false.\"}},\"updateSignatureScheme(string,address)\":{\"params\":{\"schemeAddress\":\"The contract address implementing the signature verification scheme\",\"schemeID\":\"The name of the signature scheme (e.g., BN254, BLS12-381, TESS)\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getSignatureSchemeAddress(string)\":{\"notice\":\"Retrieves the contract address associated with a specific signature scheme.\"},\"isSupportedScheme(string)\":{\"notice\":\"Checks if a specified signature scheme is supported.\"},\"updateSignatureScheme(string,address)\":{\"notice\":\"Adds support for a new signature scheme to the registry.Only contract admin or governance can add.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/blocklock-solidity/src/interfaces/ISignatureSchemeAddressProvider.sol\":\"ISignatureSchemeAddressProvider\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@blocklock-solidity/src/=lib/blocklock-solidity/src/\",\":@ds-test/=lib/forge-std/lib/ds-test/src/\",\":@forge-std/=lib/forge-std/src/\",\":@openzeppelin/contracts-upgradeable/=lib/blocklock-solidity/lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":blocklock-solidity/=lib/blocklock-solidity/\",\":config/=config/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts-upgradeable/=lib/blocklock-solidity/lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/blocklock-solidity/src/interfaces/ISignatureSchemeAddressProvider.sol\":{\"keccak256\":\"0x1ec683c6ff78e55a86c9c29b6a885ab306bfce3622d52f3092fee3e6de1d67be\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7323fe25b0645e01239d8279db3aec770779d1464bec80785c625d744c169535\",\"dweb:/ipfs/QmehDvS7U3XtTYeEyZ9EbE9XuGwNX98EhPCVjpszvAz473\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.24+commit.e11b9ed9"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"string","name":"schemeID","type":"string"}],"stateMutability":"view","type":"function","name":"getSignatureSchemeAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"schemeID","type":"string"}],"stateMutability":"view","type":"function","name":"isSupportedScheme","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"schemeID","type":"string"},{"internalType":"address","name":"schemeAddress","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"updateSignatureScheme"}],"devdoc":{"kind":"dev","methods":{"getSignatureSchemeAddress(string)":{"details":"Looks up the address of the signature scheme contract identified by `schemeID`.","params":{"schemeID":"The identifier of the signature scheme to look up."},"returns":{"_0":"The contract address associated with the specified signature scheme."}},"isSupportedScheme(string)":{"details":"Determines whether the signature scheme identified by `schemeID` is currently supported.","params":{"schemeID":"The identifier of the signature scheme to check."},"returns":{"_0":"True if the signature scheme is supported, otherwise false."}},"updateSignatureScheme(string,address)":{"params":{"schemeAddress":"The contract address implementing the signature verification scheme","schemeID":"The name of the signature scheme (e.g., BN254, BLS12-381, TESS)"}}},"version":1},"userdoc":{"kind":"user","methods":{"getSignatureSchemeAddress(string)":{"notice":"Retrieves the contract address associated with a specific signature scheme."},"isSupportedScheme(string)":{"notice":"Checks if a specified signature scheme is supported."},"updateSignatureScheme(string,address)":{"notice":"Adds support for a new signature scheme to the registry.Only contract admin or governance can add."}},"version":1}},"settings":{"remappings":["@blocklock-solidity/src/=lib/blocklock-solidity/src/","@ds-test/=lib/forge-std/lib/ds-test/src/","@forge-std/=lib/forge-std/src/","@openzeppelin/contracts-upgradeable/=lib/blocklock-solidity/lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","blocklock-solidity/=lib/blocklock-solidity/","config/=config/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","openzeppelin-contracts-upgradeable/=lib/blocklock-solidity/lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/"],"optimizer":{"enabled":true,"runs":20000},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/blocklock-solidity/src/interfaces/ISignatureSchemeAddressProvider.sol":"ISignatureSchemeAddressProvider"},"evmVersion":"cancun","libraries":{}},"sources":{"lib/blocklock-solidity/src/interfaces/ISignatureSchemeAddressProvider.sol":{"keccak256":"0x1ec683c6ff78e55a86c9c29b6a885ab306bfce3622d52f3092fee3e6de1d67be","urls":["bzz-raw://7323fe25b0645e01239d8279db3aec770779d1464bec80785c625d744c169535","dweb:/ipfs/QmehDvS7U3XtTYeEyZ9EbE9XuGwNX98EhPCVjpszvAz473"],"license":"MIT"}},"version":1},"id":17}