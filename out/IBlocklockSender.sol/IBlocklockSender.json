{"abi":[{"type":"function","name":"decrypt","inputs":[{"name":"ciphertext","type":"tuple","internalType":"struct TypesLib.Ciphertext","components":[{"name":"u","type":"tuple","internalType":"struct BLS.PointG2","components":[{"name":"x","type":"uint256[2]","internalType":"uint256[2]"},{"name":"y","type":"uint256[2]","internalType":"uint256[2]"}]},{"name":"v","type":"bytes","internalType":"bytes"},{"name":"w","type":"bytes","internalType":"bytes"}]},{"name":"decryptionKey","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"getRequest","inputs":[{"name":"requestId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"tuple","internalType":"struct TypesLib.BlocklockRequest","components":[{"name":"decryptionRequestID","type":"uint256","internalType":"uint256"},{"name":"blockHeight","type":"uint256","internalType":"uint256"},{"name":"ciphertext","type":"tuple","internalType":"struct TypesLib.Ciphertext","components":[{"name":"u","type":"tuple","internalType":"struct BLS.PointG2","components":[{"name":"x","type":"uint256[2]","internalType":"uint256[2]"},{"name":"y","type":"uint256[2]","internalType":"uint256[2]"}]},{"name":"v","type":"bytes","internalType":"bytes"},{"name":"w","type":"bytes","internalType":"bytes"}]},{"name":"signature","type":"bytes","internalType":"bytes"},{"name":"decryptionKey","type":"bytes","internalType":"bytes"},{"name":"callback","type":"address","internalType":"address"}]}],"stateMutability":"view"},{"type":"function","name":"requestBlocklock","inputs":[{"name":"blockHeight","type":"uint256","internalType":"uint256"},{"name":"ciphertext","type":"tuple","internalType":"struct TypesLib.Ciphertext","components":[{"name":"u","type":"tuple","internalType":"struct BLS.PointG2","components":[{"name":"x","type":"uint256[2]","internalType":"uint256[2]"},{"name":"y","type":"uint256[2]","internalType":"uint256[2]"}]},{"name":"v","type":"bytes","internalType":"bytes"},{"name":"w","type":"bytes","internalType":"bytes"}]}],"outputs":[{"name":"requestID","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"setDecryptionSender","inputs":[{"name":"newDecryptionSender","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"version","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"decrypt(((uint256[2],uint256[2]),bytes,bytes),bytes)":"c9bc18c4","getRequest(uint256)":"c58343ef","requestBlocklock(uint256,((uint256[2],uint256[2]),bytes,bytes))":"46cd2b42","setDecryptionSender(address)":"1e6ba15b","version()":"54fd4d50"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"x\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"y\",\"type\":\"uint256[2]\"}],\"internalType\":\"struct BLS.PointG2\",\"name\":\"u\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"v\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"w\",\"type\":\"bytes\"}],\"internalType\":\"struct TypesLib.Ciphertext\",\"name\":\"ciphertext\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"decryptionKey\",\"type\":\"bytes\"}],\"name\":\"decrypt\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"name\":\"getRequest\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"decryptionRequestID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockHeight\",\"type\":\"uint256\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"x\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"y\",\"type\":\"uint256[2]\"}],\"internalType\":\"struct BLS.PointG2\",\"name\":\"u\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"v\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"w\",\"type\":\"bytes\"}],\"internalType\":\"struct TypesLib.Ciphertext\",\"name\":\"ciphertext\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"decryptionKey\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"callback\",\"type\":\"address\"}],\"internalType\":\"struct TypesLib.BlocklockRequest\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockHeight\",\"type\":\"uint256\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"x\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"y\",\"type\":\"uint256[2]\"}],\"internalType\":\"struct BLS.PointG2\",\"name\":\"u\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"v\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"w\",\"type\":\"bytes\"}],\"internalType\":\"struct TypesLib.Ciphertext\",\"name\":\"ciphertext\",\"type\":\"tuple\"}],\"name\":\"requestBlocklock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"requestID\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newDecryptionSender\",\"type\":\"address\"}],\"name\":\"setDecryptionSender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"decrypt(((uint256[2],uint256[2]),bytes,bytes),bytes)\":{\"params\":{\"ciphertext\":\"The ciphertext to decrypt.\",\"decryptionKey\":\"The decryption key that can be used to decrypt the ciphertext.\"}},\"getRequest(uint256)\":{\"details\":\"This function returns the Request struct associated with the given requestId.\",\"params\":{\"requestId\":\"The ID of the request to retrieve.\"},\"returns\":{\"_0\":\"The Request struct corresponding to the given requestId.\"}},\"requestBlocklock(uint256,((uint256[2],uint256[2]),bytes,bytes))\":{\"details\":\"Initiates a blocklock decryption key request. The blocklock decryption key will be generated once the chain reaches the specified `blockHeight`.\",\"returns\":{\"requestID\":\"The unique identifier assigned to this blocklock request.\"}},\"setDecryptionSender(address)\":{\"params\":{\"newDecryptionSender\":\"The decryption sender address to set\"}},\"version()\":{\"details\":\"Returns the version number of the upgradeable contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"decrypt(((uint256[2],uint256[2]),bytes,bytes),bytes)\":{\"notice\":\"Decrypt a ciphertext into a plaintext using a decryption key.\"},\"getRequest(uint256)\":{\"notice\":\"Retrieves a specific request by its ID.\"},\"requestBlocklock(uint256,((uint256[2],uint256[2]),bytes,bytes))\":{\"notice\":\"Requests the generation of a blocklock decryption key at a specific blockHeight.\"},\"setDecryptionSender(address)\":{\"notice\":\"Updates the decryptionn sender contract address\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/blocklock-solidity/src/interfaces/IBlocklockSender.sol\":\"IBlocklockSender\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@blocklock-solidity/src/=lib/blocklock-solidity/src/\",\":@ds-test/=lib/forge-std/lib/ds-test/src/\",\":@forge-std/=lib/forge-std/src/\",\":@openzeppelin/contracts-upgradeable/=lib/blocklock-solidity/lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":blocklock-solidity/=lib/blocklock-solidity/\",\":config/=config/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts-upgradeable/=lib/blocklock-solidity/lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/blocklock-solidity/src/interfaces/IBlocklockSender.sol\":{\"keccak256\":\"0x5e45f34c9d5321bfe65b1f53d6980c9c33b2f2c5d8cf9ccf009a471ae0db303e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d2ed2accfad7300586acfa3f61beba7911fc1d3d2174c382f438c6b950285e3\",\"dweb:/ipfs/QmT1aBRbrPCA9Co6RLxEJ4YCCFywgoyxJpdgBGTxSEbDPr\"]},\"lib/blocklock-solidity/src/libraries/BLS.sol\":{\"keccak256\":\"0x2da1804b02071947b31a69bdd567291638316b320368fc29bc0b13be9a129578\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://362d0c8f87d1ea62408266c30bbaa7a467deaee057846277b3d449f527545e1f\",\"dweb:/ipfs/QmToy3p41CJVxBWQEdmJFpCkb3cXWhTgwhJRWrid9wCVaz\"]},\"lib/blocklock-solidity/src/libraries/ModExp.sol\":{\"keccak256\":\"0x40964e060f2e7229e66dc1698e11503ff1e3ab94106971192f4f1c49622b2feb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05d1962cbeb754479575daa623c8d27669f31248d0b1a1e2c13dcc91c088837e\",\"dweb:/ipfs/QmZVbLHadGSW8Gk7MBbVP8EysyGFEb1Unfbv3kjsWHv1us\"]},\"lib/blocklock-solidity/src/libraries/TypesLib.sol\":{\"keccak256\":\"0x61ac15e536fbef7cd84145322fcf17d462e9b8a0c6838285ae934c7bed0173f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://853224323e7f3357f8de593b07c3ea487d4d6bd8c23251d1fe6ba9fc257a80a7\",\"dweb:/ipfs/QmTaUQNHTT3PtYL1nL4d91NCWU1GbQRek19c1xE1tiZTMu\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.24+commit.e11b9ed9"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"struct TypesLib.Ciphertext","name":"ciphertext","type":"tuple","components":[{"internalType":"struct BLS.PointG2","name":"u","type":"tuple","components":[{"internalType":"uint256[2]","name":"x","type":"uint256[2]"},{"internalType":"uint256[2]","name":"y","type":"uint256[2]"}]},{"internalType":"bytes","name":"v","type":"bytes"},{"internalType":"bytes","name":"w","type":"bytes"}]},{"internalType":"bytes","name":"decryptionKey","type":"bytes"}],"stateMutability":"view","type":"function","name":"decrypt","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"uint256","name":"requestId","type":"uint256"}],"stateMutability":"view","type":"function","name":"getRequest","outputs":[{"internalType":"struct TypesLib.BlocklockRequest","name":"","type":"tuple","components":[{"internalType":"uint256","name":"decryptionRequestID","type":"uint256"},{"internalType":"uint256","name":"blockHeight","type":"uint256"},{"internalType":"struct TypesLib.Ciphertext","name":"ciphertext","type":"tuple","components":[{"internalType":"struct BLS.PointG2","name":"u","type":"tuple","components":[{"internalType":"uint256[2]","name":"x","type":"uint256[2]"},{"internalType":"uint256[2]","name":"y","type":"uint256[2]"}]},{"internalType":"bytes","name":"v","type":"bytes"},{"internalType":"bytes","name":"w","type":"bytes"}]},{"internalType":"bytes","name":"signature","type":"bytes"},{"internalType":"bytes","name":"decryptionKey","type":"bytes"},{"internalType":"address","name":"callback","type":"address"}]}]},{"inputs":[{"internalType":"uint256","name":"blockHeight","type":"uint256"},{"internalType":"struct TypesLib.Ciphertext","name":"ciphertext","type":"tuple","components":[{"internalType":"struct BLS.PointG2","name":"u","type":"tuple","components":[{"internalType":"uint256[2]","name":"x","type":"uint256[2]"},{"internalType":"uint256[2]","name":"y","type":"uint256[2]"}]},{"internalType":"bytes","name":"v","type":"bytes"},{"internalType":"bytes","name":"w","type":"bytes"}]}],"stateMutability":"nonpayable","type":"function","name":"requestBlocklock","outputs":[{"internalType":"uint256","name":"requestID","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"newDecryptionSender","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setDecryptionSender"},{"inputs":[],"stateMutability":"pure","type":"function","name":"version","outputs":[{"internalType":"string","name":"","type":"string"}]}],"devdoc":{"kind":"dev","methods":{"decrypt(((uint256[2],uint256[2]),bytes,bytes),bytes)":{"params":{"ciphertext":"The ciphertext to decrypt.","decryptionKey":"The decryption key that can be used to decrypt the ciphertext."}},"getRequest(uint256)":{"details":"This function returns the Request struct associated with the given requestId.","params":{"requestId":"The ID of the request to retrieve."},"returns":{"_0":"The Request struct corresponding to the given requestId."}},"requestBlocklock(uint256,((uint256[2],uint256[2]),bytes,bytes))":{"details":"Initiates a blocklock decryption key request. The blocklock decryption key will be generated once the chain reaches the specified `blockHeight`.","returns":{"requestID":"The unique identifier assigned to this blocklock request."}},"setDecryptionSender(address)":{"params":{"newDecryptionSender":"The decryption sender address to set"}},"version()":{"details":"Returns the version number of the upgradeable contract."}},"version":1},"userdoc":{"kind":"user","methods":{"decrypt(((uint256[2],uint256[2]),bytes,bytes),bytes)":{"notice":"Decrypt a ciphertext into a plaintext using a decryption key."},"getRequest(uint256)":{"notice":"Retrieves a specific request by its ID."},"requestBlocklock(uint256,((uint256[2],uint256[2]),bytes,bytes))":{"notice":"Requests the generation of a blocklock decryption key at a specific blockHeight."},"setDecryptionSender(address)":{"notice":"Updates the decryptionn sender contract address"}},"version":1}},"settings":{"remappings":["@blocklock-solidity/src/=lib/blocklock-solidity/src/","@ds-test/=lib/forge-std/lib/ds-test/src/","@forge-std/=lib/forge-std/src/","@openzeppelin/contracts-upgradeable/=lib/blocklock-solidity/lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","blocklock-solidity/=lib/blocklock-solidity/","config/=config/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","openzeppelin-contracts-upgradeable/=lib/blocklock-solidity/lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/"],"optimizer":{"enabled":true,"runs":20000},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/blocklock-solidity/src/interfaces/IBlocklockSender.sol":"IBlocklockSender"},"evmVersion":"cancun","libraries":{}},"sources":{"lib/blocklock-solidity/src/interfaces/IBlocklockSender.sol":{"keccak256":"0x5e45f34c9d5321bfe65b1f53d6980c9c33b2f2c5d8cf9ccf009a471ae0db303e","urls":["bzz-raw://7d2ed2accfad7300586acfa3f61beba7911fc1d3d2174c382f438c6b950285e3","dweb:/ipfs/QmT1aBRbrPCA9Co6RLxEJ4YCCFywgoyxJpdgBGTxSEbDPr"],"license":"MIT"},"lib/blocklock-solidity/src/libraries/BLS.sol":{"keccak256":"0x2da1804b02071947b31a69bdd567291638316b320368fc29bc0b13be9a129578","urls":["bzz-raw://362d0c8f87d1ea62408266c30bbaa7a467deaee057846277b3d449f527545e1f","dweb:/ipfs/QmToy3p41CJVxBWQEdmJFpCkb3cXWhTgwhJRWrid9wCVaz"],"license":"MIT"},"lib/blocklock-solidity/src/libraries/ModExp.sol":{"keccak256":"0x40964e060f2e7229e66dc1698e11503ff1e3ab94106971192f4f1c49622b2feb","urls":["bzz-raw://05d1962cbeb754479575daa623c8d27669f31248d0b1a1e2c13dcc91c088837e","dweb:/ipfs/QmZVbLHadGSW8Gk7MBbVP8EysyGFEb1Unfbv3kjsWHv1us"],"license":"MIT"},"lib/blocklock-solidity/src/libraries/TypesLib.sol":{"keccak256":"0x61ac15e536fbef7cd84145322fcf17d462e9b8a0c6838285ae934c7bed0173f6","urls":["bzz-raw://853224323e7f3357f8de593b07c3ea487d4d6bd8c23251d1fe6ba9fc257a80a7","dweb:/ipfs/QmTaUQNHTT3PtYL1nL4d91NCWU1GbQRek19c1xE1tiZTMu"],"license":"MIT"}},"version":1},"id":12}