{"abi":[{"type":"function","name":"receiveDecryptionData","inputs":[{"name":"requestID","type":"uint256","internalType":"uint256"},{"name":"decryptionKey","type":"bytes","internalType":"bytes"},{"name":"signature","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"receiveDecryptionData(uint256,bytes,bytes)":"5d3be001"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestID\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"decryptionKey\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"receiveDecryptionData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"receiveDecryptionData(uint256,bytes,bytes)\":{\"details\":\"This function is intended to be called by an authorized decrypter contract\",\"params\":{\"decryptionKey\":\"The decryption key associated with the request, provided as a byte array\",\"requestID\":\"The ID of the request for which the decryption key is provided\",\"signature\":\"The signature associated with the request, provided as a byte array\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"receiveDecryptionData(uint256,bytes,bytes)\":{\"notice\":\"Receives a decryption key that can be used to decrypt the ciphertext\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/blocklock-solidity/src/interfaces/IDecryptionReceiver.sol\":\"IDecryptionReceiver\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@blocklock-solidity/src/=lib/blocklock-solidity/src/\",\":@ds-test/=lib/forge-std/lib/ds-test/src/\",\":@forge-std/=lib/forge-std/src/\",\":@openzeppelin/contracts-upgradeable/=lib/blocklock-solidity/lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":blocklock-solidity/=lib/blocklock-solidity/\",\":config/=config/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts-upgradeable/=lib/blocklock-solidity/lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/blocklock-solidity/src/interfaces/IDecryptionReceiver.sol\":{\"keccak256\":\"0xe8fadc08b9c70acd404ee22b2e6d8bb34f6a95128096378110e8a769bbedd245\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://76156bb5fbca4374f79bbab50bdb4ce76559a4dd317d4988acae8af3de75a287\",\"dweb:/ipfs/Qmbdp1dfqbmFpFZRMqXqgXXjrWBMnwdQ9D2Wkh7Q4DBmSN\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.24+commit.e11b9ed9"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint256","name":"requestID","type":"uint256"},{"internalType":"bytes","name":"decryptionKey","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"receiveDecryptionData"}],"devdoc":{"kind":"dev","methods":{"receiveDecryptionData(uint256,bytes,bytes)":{"details":"This function is intended to be called by an authorized decrypter contract","params":{"decryptionKey":"The decryption key associated with the request, provided as a byte array","requestID":"The ID of the request for which the decryption key is provided","signature":"The signature associated with the request, provided as a byte array"}}},"version":1},"userdoc":{"kind":"user","methods":{"receiveDecryptionData(uint256,bytes,bytes)":{"notice":"Receives a decryption key that can be used to decrypt the ciphertext"}},"version":1}},"settings":{"remappings":["@blocklock-solidity/src/=lib/blocklock-solidity/src/","@ds-test/=lib/forge-std/lib/ds-test/src/","@forge-std/=lib/forge-std/src/","@openzeppelin/contracts-upgradeable/=lib/blocklock-solidity/lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","blocklock-solidity/=lib/blocklock-solidity/","config/=config/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","openzeppelin-contracts-upgradeable/=lib/blocklock-solidity/lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/"],"optimizer":{"enabled":true,"runs":20000},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/blocklock-solidity/src/interfaces/IDecryptionReceiver.sol":"IDecryptionReceiver"},"evmVersion":"cancun","libraries":{}},"sources":{"lib/blocklock-solidity/src/interfaces/IDecryptionReceiver.sol":{"keccak256":"0xe8fadc08b9c70acd404ee22b2e6d8bb34f6a95128096378110e8a769bbedd245","urls":["bzz-raw://76156bb5fbca4374f79bbab50bdb4ce76559a4dd317d4988acae8af3de75a287","dweb:/ipfs/Qmbdp1dfqbmFpFZRMqXqgXXjrWBMnwdQ9D2Wkh7Q4DBmSN"],"license":"MIT"}},"version":1},"id":13}