{"abi":[{"type":"function","name":"SCHEME_ID","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"hashToBytes","inputs":[{"name":"message","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"hashToPoint","inputs":[{"name":"message","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"},{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"verifySignature","inputs":[{"name":"message","type":"bytes","internalType":"bytes"},{"name":"signature","type":"bytes","internalType":"bytes"},{"name":"publicKey","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"isValid","type":"bool","internalType":"bool"}],"stateMutability":"view"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"SCHEME_ID()":"8a1f165a","hashToBytes(bytes)":"eae1e15b","hashToPoint(bytes)":"3033cc51","verifySignature(bytes,bytes,bytes)":"f6e548e9"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"SCHEME_ID\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"hashToBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"hashToPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"publicKey\",\"type\":\"bytes\"}],\"name\":\"verifySignature\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"hashToBytes(bytes)\":{\"params\":{\"message\":\"The message to be hashed.\"},\"returns\":{\"_0\":\"bytes A point on the elliptic curve in G1, represented as bytes.\"}},\"hashToPoint(bytes)\":{\"params\":{\"message\":\"The message to be hashed.\"},\"returns\":{\"_0\":\"(uint256, uint256) A point on the elliptic curve in G1, represented as x and y coordinates.\"}},\"verifySignature(bytes,bytes,bytes)\":{\"params\":{\"message\":\"The message that was signed. Message is a G1 point represented as bytes.\",\"publicKey\":\"The public key of the signer. Public key is a G2 point represented as bytes.\",\"signature\":\"The signature to verify. Signature is a G1 point represented as bytes.\"},\"returns\":{\"isValid\":\"boolean which evaluates to true if the signature is valid, false otherwise.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"SCHEME_ID()\":{\"notice\":\"Returns the scheme identifier as a string, e.g., \\\"BN254\\\", \\\"BLS12-381\\\", \\\"TESS\\\"\"},\"hashToBytes(bytes)\":{\"notice\":\"Hashes a message to a G1 point on the elliptic curve.\"},\"hashToPoint(bytes)\":{\"notice\":\"Hashes a message to a G1 point on the elliptic curve.\"},\"verifySignature(bytes,bytes,bytes)\":{\"notice\":\"Verifies a signature using the given signature scheme.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/blocklock-solidity/src/interfaces/ISignatureScheme.sol\":\"ISignatureScheme\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@blocklock-solidity/src/=lib/blocklock-solidity/src/\",\":@ds-test/=lib/forge-std/lib/ds-test/src/\",\":@forge-std/=lib/forge-std/src/\",\":@openzeppelin/contracts-upgradeable/=lib/blocklock-solidity/lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":blocklock-solidity/=lib/blocklock-solidity/\",\":config/=config/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts-upgradeable/=lib/blocklock-solidity/lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/blocklock-solidity/src/interfaces/ISignatureScheme.sol\":{\"keccak256\":\"0xd6ce385b8666cc9d4e16367dd8ab24555bc91cacbca4a3a23007684137229977\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ec57c63999b3156a312b5ace2ed0ad51694047d21e0378140fa60d8152cc194\",\"dweb:/ipfs/QmPVdqdgbXcLb5b4xGUgq4A8sxbyjoPsdChew2ttKeARfn\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.24+commit.e11b9ed9"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"SCHEME_ID","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"bytes","name":"message","type":"bytes"}],"stateMutability":"view","type":"function","name":"hashToBytes","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"bytes","name":"message","type":"bytes"}],"stateMutability":"view","type":"function","name":"hashToPoint","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"bytes","name":"message","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"},{"internalType":"bytes","name":"publicKey","type":"bytes"}],"stateMutability":"view","type":"function","name":"verifySignature","outputs":[{"internalType":"bool","name":"isValid","type":"bool"}]}],"devdoc":{"kind":"dev","methods":{"hashToBytes(bytes)":{"params":{"message":"The message to be hashed."},"returns":{"_0":"bytes A point on the elliptic curve in G1, represented as bytes."}},"hashToPoint(bytes)":{"params":{"message":"The message to be hashed."},"returns":{"_0":"(uint256, uint256) A point on the elliptic curve in G1, represented as x and y coordinates."}},"verifySignature(bytes,bytes,bytes)":{"params":{"message":"The message that was signed. Message is a G1 point represented as bytes.","publicKey":"The public key of the signer. Public key is a G2 point represented as bytes.","signature":"The signature to verify. Signature is a G1 point represented as bytes."},"returns":{"isValid":"boolean which evaluates to true if the signature is valid, false otherwise."}}},"version":1},"userdoc":{"kind":"user","methods":{"SCHEME_ID()":{"notice":"Returns the scheme identifier as a string, e.g., \"BN254\", \"BLS12-381\", \"TESS\""},"hashToBytes(bytes)":{"notice":"Hashes a message to a G1 point on the elliptic curve."},"hashToPoint(bytes)":{"notice":"Hashes a message to a G1 point on the elliptic curve."},"verifySignature(bytes,bytes,bytes)":{"notice":"Verifies a signature using the given signature scheme."}},"version":1}},"settings":{"remappings":["@blocklock-solidity/src/=lib/blocklock-solidity/src/","@ds-test/=lib/forge-std/lib/ds-test/src/","@forge-std/=lib/forge-std/src/","@openzeppelin/contracts-upgradeable/=lib/blocklock-solidity/lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","blocklock-solidity/=lib/blocklock-solidity/","config/=config/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","openzeppelin-contracts-upgradeable/=lib/blocklock-solidity/lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/"],"optimizer":{"enabled":true,"runs":20000},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/blocklock-solidity/src/interfaces/ISignatureScheme.sol":"ISignatureScheme"},"evmVersion":"cancun","libraries":{}},"sources":{"lib/blocklock-solidity/src/interfaces/ISignatureScheme.sol":{"keccak256":"0xd6ce385b8666cc9d4e16367dd8ab24555bc91cacbca4a3a23007684137229977","urls":["bzz-raw://6ec57c63999b3156a312b5ace2ed0ad51694047d21e0378140fa60d8152cc194","dweb:/ipfs/QmPVdqdgbXcLb5b4xGUgq4A8sxbyjoPsdChew2ttKeARfn"],"license":"MIT"}},"version":1},"id":16}